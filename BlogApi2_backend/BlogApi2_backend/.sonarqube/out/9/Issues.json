{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.13.0.0",
        "fileVersion": "4.13.0-3.25112.7 (afe5bc4a)",
        "semanticVersion": "4.13.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Blogs' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Data/BlogContext.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 16,
                  "endLine": 8,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Data/BlogContext.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 28,
                  "endLine": 12,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Authors' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Data/BlogContext.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 16,
                  "endLine": 8,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Data/BlogContext.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 30,
                  "endLine": 13,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Comments' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Data/BlogContext.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 16,
                  "endLine": 8,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Data/BlogContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 32,
                  "endLine": 15,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Models/Entities/Comments.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 9,
                  "endLine": 13,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Services/AuthorService.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 13,
                  "endLine": 42,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_logger' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/WeatherForecastController.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 61,
                  "endLine": 14,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Error occurred' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 112,
                  "startColumn": 63,
                  "endLine": 112,
                  "endColumn": 79
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 63,
                  "endLine": 133,
                  "endColumn": 79
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 63,
                  "endLine": 154,
                  "endColumn": 79
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 63,
                  "endLine": 176,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null
            }
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Migrations/20250205072744_Blog%20navigation%20removed.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Migrations/20250227113427_InitialCreate.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Migrations/20250408084008_NewChanges.cs",
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'GetStatusCodeFromException' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/AuthorController.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 21,
                  "endLine": 27,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'GetStatusCodeFromException' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 21,
                  "endLine": 28,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Models/Dtos/AddBlogDto.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 25,
                  "endLine": 9,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Models/Dtos/AddBlogDto.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 20,
                  "endLine": 10,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Models/Dtos/UpdateBlogDto.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 20,
                  "endLine": 7,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer the string comparison method overload of 'string.Contains(string)' that takes a 'StringComparison' enum value to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Repository/AuthorRepository.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 29,
                  "endLine": 39,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": "ToLower"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer the string comparison method overload of 'string.Contains(string)' that takes a 'StringComparison' enum value to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Repository/BlogRepository.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 32,
                  "endLine": 50,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": "ToLower"
            }
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await RunAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Program.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 1,
                  "endLine": 71,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Models/Dtos/AddComment.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 20,
                  "endLine": 13,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetStatusCodeFromException' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/AuthorController.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 21,
                  "endLine": 27,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6960",
          "level": "warning",
          "message": "This controller has multiple responsibilities and could be split into 2 smaller controllers.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 18,
                  "endLine": 22,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 42,
                  "endLine": 160,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 42,
                  "endLine": 139,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 21,
                  "endLine": 28,
                  "endColumn": 47
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 42,
                  "endLine": 118,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 42,
                  "endLine": 73,
                  "endColumn": 53
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 42,
                  "endLine": 60,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 42,
                  "endLine": 51,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "May belong to responsibility #1.",
              "1": "May belong to responsibility #1.",
              "2": "May belong to responsibility #1.",
              "3": "May belong to responsibility #1.",
              "4": "May belong to responsibility #1.",
              "5": "May belong to responsibility #2.",
              "6": "May belong to responsibility #2.",
              "7": "May belong to responsibility #2."
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetStatusCodeFromException' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Controllers/BlogController.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 21,
                  "endLine": 28,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'serviceCollection'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/2020677/Music/Blog_project_new2/Blog_project_web/BlogApi2_backend/BlogApi2_backend/Program.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 20,
                  "endLine": 49,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1862": {
          "id": "CA1862",
          "shortDescription": "Use the 'StringComparison' method overloads to perform case-insensitive string comparisons",
          "fullDescription": "Avoid calling 'ToLower', 'ToUpper', 'ToLowerInvariant' and 'ToUpperInvariant' to perform case-insensitive string comparisons because they lead to an allocation. Instead, prefer calling the method overloads of 'Contains', 'IndexOf' and 'StartsWith' that take a 'StringComparison' enum value to perform case-insensitive comparisons. Switching to using an overload that takes a 'StringComparison' might cause subtle changes in behavior, so it's important to conduct thorough testing after applying the suggestion. Additionally, if a culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1862",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1186": {
          "id": "S1186",
          "shortDescription": "Methods should not be empty",
          "fullDescription": "An empty method is generally considered bad practice and can lead to confusion, readability, and maintenance issues. Empty methods bring no functionality and are misleading to others as they might think the method implementation fulfills a specific and identified requirement.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1186",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1192": {
          "id": "S1192",
          "shortDescription": "String literals should not be duplicated",
          "fullDescription": "Duplicated string literals make the process of refactoring complex and error-prone, as any change would need to be propagated on all occurrences.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1192",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Commented-out code distracts the focus from the actual executed code. It creates a noise that increases maintenance code. And because it is never executed, it quickly becomes out of date and invalid.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "An unused local variable is a variable that has been declared but is not used anywhere in the block of code where it is defined. It is dead code, contributing to unnecessary complexity and leading to confusion when reading the code. Therefore, it should be removed from your code to maintain clarity and efficiency.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2325": {
          "id": "S2325",
          "shortDescription": "Methods and properties that don't access instance data should be static",
          "fullDescription": "Methods and properties that don’t access instance data should be marked as static for the following reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2325",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields which are written but never read are a case of \"dead store\". Changing the value of such a field is useless and most probably indicates an error in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6960": {
          "id": "S6960",
          "shortDescription": "Controllers should not have mixed responsibilities",
          "fullDescription": "ASP.NET controllers should not have mixed responsibilities. Following the Single Responsibility Principle (SRP), they should be kept lean and focused on a single, separate concern. In short, they should have a single reason to change.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6960",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6964": {
          "id": "S6964",
          "shortDescription": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "fullDescription": "\"Under-posting\" refers to a situation where a client sends less data than expected to the server during an HTTP request, for example when the client omits some properties from the request body that the server expects to receive.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6964",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6966": {
          "id": "S6966",
          "shortDescription": "Awaitable method should be used",
          "fullDescription": "In an async method, any blocking operations should be avoided.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6966",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}